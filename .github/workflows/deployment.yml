## This is a basic workflow to help you get started with Actions

#name: Build and deploy site

## Controls when the workflow will run
#on:
#  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ production-nodeploy ]
#  pull_request:
#    branches: [ production-nodeploy ]

#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest

#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      - name: Checkout üõéÔ∏è
#        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
#        with:
#          persist-credentials: false
#      - name: Install and Build üîß # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
#        run: |
#          npm install
#          npm run-script build
#        env: # environment variables
#          production: ${{ secrets.APP_PRODUCTION }}
#          accessToken: ${{ secrets.APP_ACCESSTOKEN }}
#          apiUrl: ${{ secrets.APP_APIURL }}
#          Audience: ${{ secrets.APP_AUDIENCE }}
#          Authority: ${{ secrets.APP_AUTHORITY }}
#      #- name: Deploy to GitHub Pages
#      #  uses: JamesIves/github-pages-deploy-action@4.1.4
#      #  with:
#      #    branch: production # The branch the action should deploy to.
#      #    folder: 'docs' # The folder the action should deploy.
#      #  env: # environment variables
#      #    production: ${{ secrets.APP_PRODUCTION }}
#      #    accessToken: ${{ secrets.APP_ACCESSTOKEN }}
#      #    apiUrl: ${{ secrets.APP_APIURL }}
#      #    Audience: ${{ secrets.APP_AUDIENCE }}
#      #    Authority: ${{ secrets.APP_AUTHORITY }}
